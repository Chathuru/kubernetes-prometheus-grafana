apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: {{ .Values.image.name }}
        name: grafana
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        - name: GF_SERVER_ROOT_URL
          value: '%(protocol)s://%(domain)s:%(http_port)s/grafana/'
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "true"
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
          subPath: datasource.yaml
        - name: grafana-dashboard
          mountPath: /etc/grafana/provisioning/dashboards/
      volumes:
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboard
        configMap:
          name: grafana-dashboard
      - name: grafana-persistent-storage
        emptyDir: {}
